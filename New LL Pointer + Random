/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        Node* cur=head;
        Node* temp;
        while(cur){
        temp=cur->next;
        cur->next=new Node(cur->val);
        cur->next->next=temp;
        cur=temp;    
        }
        cur=head;
        while(cur){
         cur->next->random=cur->random? cur->random->next:cur->random;
         cur=cur->next->next;   
        }
        Node* original=head;
        Node* copy=head->next;
        temp=copy;
        while(original and copy){
             original->next=original->next->next;
            copy->next=copy->next?copy->next->next:copy->next;
            original =original->next;
            copy=copy->next;
        }
        return temp;
    }
};
